# 256 colors
set -g default-terminal "xterm-256color"

# Reload config with a key
bind-key r source-file ~/.tmux.conf \; display "Config reloaded!"

# Start numbering at 1
set -g base-index 1

# Automatically renumber tmux windows on close
set -g renumber-windows

# Prevent tmux auto rename
set -g allow-rename off

# Add truecolor support
set-option -ga terminal-overrides ",xterm-256color:Tc"

# Set backtick as prefix
unbind C-b
set -g prefix C-a
bind-key C-a send-prefix

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Fix nvim escape
set -s escape-time 0

# Stay in directory on slits
bind '%' split-window -h -c '#{pane_current_path}'  # Split panes horizontal
bind '"' split-window -v -c '#{pane_current_path}'  # Split panes vertically
bind c new-window -c '#{pane_current_path}' # Create new window

# Shift-movement keys will resize panes
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2


# Navigate using vim-style keys
setw -g mode-keys vi

# Unbind arrow keys
unbind Up
unbind Down
unbind Right
unbind Left

# Constrain window size to the maximum of any client connected to that
# window.
setw -g aggressive-resize on

# Statusline
set -g status-justify left
set -g status-bg default
set -g status-fg default
set -g status-interval 2
setw -g window-status-format "#[bg=default]#[fg=colour8]  #W  "
setw -g window-status-current-format "#[bg=default]#[fg=colour5] â€¢ #W  "
setw -g window-status-current-attr dim
set -g status-position bottom
set -g status-justify centre
set -g status-left '#[fg=colour8]#(hostname)'
set -g status-right '#[fg=colour8]#S '
